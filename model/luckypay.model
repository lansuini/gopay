// Code generated by gormc, http://github.com/shuxs/gormc. DO NOT EDIT.
package  model
import (
	"time"

	"github.com/jinzhu/gorm"
)

//Agent -> agent 代理表
type Agent struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 LoginName string`gorm:"column:loginName;type:varchar(50);not null;"`// 登陆用户名
 NickName string`gorm:"column:nickName;type:varchar(64);not null;"`// 代理昵称
 LoginPwd string`gorm:"column:loginPwd;type:varchar(50);not null;"`// 登陆密码
 SecurePwd string`gorm:"column:securePwd;type:varchar(50);not null;"`// 支付密码
 Balance float64`gorm:"column:balance;type:decimal(10,2) unsigned;not null;"`// 余额即可提余额
 FreezeBalance float64`gorm:"column:freezeBalance;type:decimal(10,2) unsigned;not null;"`// 冻结金额
 BailBalance float64`gorm:"column:bailBalance;type:decimal(10,2) unsigned;not null;"`// 保证金
 InferisorNum int`gorm:"column:inferisorNum;type:int(11);not null;"`// 下级商户人数
 SettleAccWay interface{}`gorm:"column:settleAccWay;type:enum('D0','D1','D7','D30');not null;"`// 结算方式(D0=笔笔结算,D1=一天结算一次,D7=7天结算一次,D30=30天结算一次)
 SettleAccRatio float64`gorm:"column:settleAccRatio;type:decimal(10,2) unsigned;not null;"`// 结算比例百分比
 Status interface{}`gorm:"column:status;type:enum('Normal','Exception','Close');not null;"`// 状态(Normal=正常,Close=关闭,Exception=异常)
 LoginIP string`gorm:"column:loginIP;type:varchar(50);not null;"`// 最后登陆IP
 LoginDate time.Time`gorm:"column:loginDate;type:datetime;not null;"`// 
 LoginIPWhite string`gorm:"column:loginIpWhite;type:varchar(512);not null;"`// 登陆IP白名，若为空不限制
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName agent
func (Agent) TableName() string { 
	return "agent" 
}

//AgentBankCard -> agent_bank_card 代理后台提现银行卡信息
type AgentBankCard struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 BankCode string`gorm:"column:bankCode;type:varchar(50);not null;"`// 所属银行
 BankName string`gorm:"column:bankName;type:varchar(50);not null;"`// 开户行
 Province string`gorm:"column:province;type:varchar(50);not null;"`// 开户行所属省
 City string`gorm:"column:city;type:varchar(50);not null;"`// 开户行所属市
 District string`gorm:"column:district;type:varchar(50);not null;"`// 开户行所属区
 AccountName string`gorm:"column:accountName;type:varchar(50);not null;"`// 持卡人姓名
 AccountNo string`gorm:"column:accountNo;type:varchar(500);not null;"`// 银行卡号
 AgentID string`gorm:"column:agentId;type:varchar(500);not null;"`// 商户号ID
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
 Status interface{}`gorm:"column:status;type:enum('Normal','Deleted');not null;"`// 状态(正常、删除)
}

// TableName agent_bank_card
func (AgentBankCard) TableName() string { 
	return "agent_bank_card" 
}

//AgentFinance -> agent_finance 代理资金明细表
type AgentFinance struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 AgentID int`gorm:"column:agentId;type:int(11);"`// 代理ID
 AgentName string`gorm:"column:agentName;type:varchar(64);not null;"`// 代理名称
 PlatformOrderNo string`gorm:"column:platformOrderNo;type:varchar(21);not null;"`// 平台订单号
 DealMoney float64`gorm:"column:dealMoney;type:decimal(10,2) unsigned;not null;"`// 操作金额
 Balance float64`gorm:"column:balance;type:decimal(10,2) unsigned;not null;"`// 余额即可提余额
 FreezeBalance float64`gorm:"column:freezeBalance;type:decimal(10,2) unsigned;not null;"`// 冻结金额
 BailBalance float64`gorm:"column:bailBalance;type:decimal(10,2) unsigned;not null;"`// 保证金
 DealType interface{}`gorm:"column:dealType;type:enum('reduceBail','addBail','freeze','addFreeze','commission','extract','extractSuc','extractFail','returnFee');not null;"`// 交易类型(reduceBail=减少保证金,addBail=增加保证金,freeze=解结金额,addFreeze=增加冻结金额,commission=佣金提成,extract=提款冻结,extractSuc=提款成功,extractFail=提款失败,extractFee=手续费,returnFee=退还手续费)
 Status interface{}`gorm:"column:status;type:enum('Normal','Exception','Close');not null;"`// 状态(Normal=正常,Close=关闭,Exception=异常)
 OptID string`gorm:"column:optId;type:varchar(50);not null;"`// 操作者ID
 OptAdmin string`gorm:"column:optAdmin;type:varchar(50);not null;"`// 操作者名
 OptIP string`gorm:"column:optIP;type:varchar(50);not null;"`// 操作者IP
 OptDesc string`gorm:"column:optDesc;type:varchar(255);not null;"`// 操作备注
 Desc string`gorm:"column:desc;type:varchar(255);not null;"`// 说明
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName agent_finance
func (AgentFinance) TableName() string { 
	return "agent_finance" 
}

//AgentIncomeLog -> agent_income_log 代理收入手续费结算日志表
type AgentIncomeLog struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 AgentID int`gorm:"column:agentId;type:int(11);"`// 代理ID
 PlatformOrderNo string`gorm:"column:platformOrderNo;type:varchar(21);not null;"`// 平台订单号
 OrderMoney float64`gorm:"column:orderMoney;type:decimal(10,2) unsigned;not null;"`// 订单收费金额
 Fee float64`gorm:"column:fee;type:decimal(10,2) unsigned;not null;"`// 手续费收入
 Ways string`gorm:"column:ways;type:varchar(200);not null;"`// 计算方式json格式
 Type interface{}`gorm:"column:type;type:enum('pay','recharge','settlement');not null;"`// 交易类型(pay=支付,recharge=充值,settlement=代付
 TypeSub string`gorm:"column:typeSub;type:varchar(32);not null;"`// 具体的方式，如支付下的支付宝，微信等，代付无可为空
 BankCode string`gorm:"column:bankCode;type:varchar(32);not null;"`// 主要针对银行支付
 IsSettle int`gorm:"column:isSettle;type:int(11);not null;"`// 是否结算（1已结算 ，0未结算）
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName agent_income_log
func (AgentIncomeLog) TableName() string { 
	return "agent_income_log" 
}

//AgentLog -> agent_log 代理日志
type AgentLog struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 Action string`gorm:"column:action;type:varchar(50);not null;"`// 行为，类型定义在Agent模型中
 ActionBeforeData string`gorm:"column:actionBeforeData;type:text;"`// 操作前数据
 ActionAfterData string`gorm:"column:actionAfterData;type:text;"`// 操作后数据
 OptID uint`gorm:"column:optId;type:int(11) unsigned;not null;"`// 操作者ID
 OptName string`gorm:"column:optName;type:varchar(50);not null;"`// 操作者名
 Status interface{}`gorm:"column:status;type:enum('Success','Fail');not null;"`// 状态
 Desc string`gorm:"column:desc;type:varchar(255);not null;"`// 描述备注
 IpDesc string`gorm:"column:ipDesc;type:varchar(50);not null;"`// ip
 Ip string`gorm:"column:ip;type:varchar(50);not null;"`// ip
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName agent_log
func (AgentLog) TableName() string { 
	return "agent_log" 
}

//AgentMerchantRelation -> agent_merchant_relation 代理商户关系表
type AgentMerchantRelation struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 AgentID uint`gorm:"column:agentId;type:int(11) unsigned;not null;"`// 代理ID
 MerchantID uint`gorm:"column:merchantId;type:int(11) unsigned;not null;"`// 商户ID
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName agent_merchant_relation
func (AgentMerchantRelation) TableName() string { 
	return "agent_merchant_relation" 
}

//AgentRate -> agent_rate 商户费率表
type AgentRate struct {
 RateID uint`gorm:"column:rateId;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 BankCode string`gorm:"column:bankCode;type:varchar(50);not null;"`// 银行
 CardType interface{}`gorm:"column:cardType;type:enum('','DEBIT','CREDIT');not null;"`// 银行卡类型(DEBIT=借记卡,CREDIT=信用卡)
 BeginTime time.Time`gorm:"column:beginTime;type:date;"`// 生效时间
 EndTime time.Time`gorm:"column:endTime;type:date;"`// 失效时间
 MaxServiceCharge float64`gorm:"column:maxServiceCharge;type:decimal(10,2) unsigned;not null;"`// 最大手续费
 MinServiceCharge float64`gorm:"column:minServiceCharge;type:decimal(10,2) unsigned;not null;"`// 最小手续费
 AgentID uint`gorm:"column:agentId;type:int(11) unsigned;not null;"`// 代理商户ID
 AgentLoginName string`gorm:"column:agentLoginName;type:varchar(50);not null;"`// 代理商户号
 PayType interface{}`gorm:"column:payType;type:enum('EBank','Quick','OfflineWechatQR','OfflineAlipayQR','OnlineWechatQR','OnlineAlipayQR','OnlineWechatH5','OnlineAlipayH5','UnionPayQR','D0Settlement','PersonalEBank','EnterpriseEBank','PersonalEBankDNA','EnterpriseAlipay');not null;"`// 支付方式(EBank=网银,Quick=快捷,OfflineWechatQR=线下微信扫码,OfflineAlipayQR=线下支付宝扫码,
            OnlineWechatQR=线上微信扫码,OnlineAlipayQR=线上支付宝扫码,OnlineWechatH5=线上微信H5,OnlineAlipayH5=线上支付宝H5,
            UnionPayQR=银联扫码,D0Settlement=D0结算)
 ProductType interface{}`gorm:"column:productType;type:enum('Pay','Recharge','Settlement');not null;"`// 产品类型
 Rate interface{}`gorm:"column:rate;type:float unsigned;not null;"`// 费率值
 Fixed interface{}`gorm:"column:fixed;type:float unsigned;not null;"`// 固定费率值
 RateType interface{}`gorm:"column:rateType;type:enum('Rate','Mixed','FixedValue');not null;"`// 费率类型
 Status interface{}`gorm:"column:status;type:enum('Normal','Close');not null;"`// 状态
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName agent_rate
func (AgentRate) TableName() string { 
	return "agent_rate" 
}

//AgentReport -> agent_report 代理数据报表
type AgentReport struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 AgentID int`gorm:"column:agentId;type:int(11);"`// 代理ID
 AgentName string`gorm:"column:agentName;type:varchar(64);not null;"`// 代理名称
 AddMerchant int`gorm:"column:addMerchant;type:int(11);not null;"`// 新增下级
 CommCount int`gorm:"column:commCount;type:int(11);not null;"`// 佣金笔数
 CommMoney float64`gorm:"column:commMoney;type:decimal(10,2);not null;"`// 佣金金额
 SettCommCount int`gorm:"column:settCommCount;type:int(11);not null;"`// 下发佣金笔数
 SettCommMoney float64`gorm:"column:settCommMoney;type:decimal(10,2);not null;"`// 下发佣金金额
 WithdrewCount int`gorm:"column:withdrewCount;type:int(11);not null;"`// 提款笔数
 WithdrewMoney float64`gorm:"column:withdrewMoney;type:decimal(10,2);not null;"`// 提款金额
 WithdrewFee float64`gorm:"column:withdrewFee;type:decimal(10,2);not null;"`// 提款手续费
 CommWays string`gorm:"column:commWays;type:varchar(4);not null;"`// 佣金结算方式D0 D1 D7 D30
 AccountDate time.Time`gorm:"column:accountDate;type:date;not null;"`// 财务日期
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName agent_report
func (AgentReport) TableName() string { 
	return "agent_report" 
}

//AgentWithdrawOrder -> agent_withdraw_order 代理提现表
type AgentWithdrawOrder struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 AgentID int`gorm:"column:agentId;type:int(11);"`// 代理ID
 AgentName string`gorm:"column:agentName;type:varchar(64);not null;"`// 代理名称
 BankID int`gorm:"column:bankId;type:int(11);"`// 代理银行卡ID
 PlatformOrderNo string`gorm:"column:platformOrderNo;type:varchar(21);not null;"`// 平台订单号
 DealMoney float64`gorm:"column:dealMoney;type:decimal(10,2) unsigned;not null;"`// 申请提现金额
 RealMoney float64`gorm:"column:realMoney;type:decimal(10,2) unsigned;not null;"`// 实际到账金额
 Fee float64`gorm:"column:fee;type:decimal(10,2) unsigned;not null;"`// 提现手续费
 Status interface{}`gorm:"column:status;type:enum('Apply','Adopt','Refute','Complete');not null;"`// 状态(Apply=申请中,Adopt=通过,Refute=拒绝,Complete=成功打款/完成)
 OptID string`gorm:"column:optId;type:varchar(50);not null;"`// 操作者ID
 OptAdmin string`gorm:"column:optAdmin;type:varchar(50);not null;"`// 操作者名
 OptIP string`gorm:"column:optIP;type:varchar(50);not null;"`// 操作者IP
 OptDesc string`gorm:"column:optDesc;type:varchar(255);not null;"`// 操作备注
 AppIP string`gorm:"column:appIP;type:varchar(50);not null;"`// 申请者IP
 AppDesc string`gorm:"column:appDesc;type:varchar(255);not null;"`// 申请者备注
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName agent_withdraw_order
func (AgentWithdrawOrder) TableName() string { 
	return "agent_withdraw_order" 
}

//AmountPay -> amount_pay 支付订单金额统计
type AmountPay struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 Amount float64`gorm:"column:amount;type:decimal(10,2) unsigned;not null;"`// 金额
 MerchantID uint`gorm:"column:merchantId;type:int(11) unsigned;not null;"`// 商户ID
 MerchantNo string`gorm:"column:merchantNo;type:varchar(50);not null;"`// 商户号
 ChannelMerchantID uint`gorm:"column:channelMerchantId;type:int(11) unsigned;not null;"`// 商户ID
 ChannelMerchantNo string`gorm:"column:channelMerchantNo;type:varchar(50);not null;"`// 商户号
 PayType interface{}`gorm:"column:payType;type:enum('EBank','Quick','OfflineWechatQR','OfflineAlipayQR','OnlineWechatQR','OnlineAlipayQR','OnlineWechatH5','OnlineAlipayH5','UnionPayQR','D0Settlement','UnionPay','OnlineAlipayOriginalH5','OnlineWechatOriginalH5');not null;"`// 支付方式(EBank=网银,Quick=快捷,OfflineWechatQR=线下微信扫码,OfflineAlipayQR=线下支付宝扫码,
            OnlineWechatQR=线上微信扫码,OnlineAlipayQR=线上支付宝扫码,OnlineWechatH5=线上微信H5,OnlineAlipayH5=线上支付宝H5,
OnlineAlipayOriginalH5=线上支付宝原生H5,OnlineWechatOriginalH5=线上微信原生H5,UnionPay=银联快捷/云闪付,UnionPayQR=银联扫码,D0Settlement=D0结算)
 AccountDate time.Time`gorm:"column:accountDate;type:date;not null;"`// 财务日期
 Balance float64`gorm:"column:balance;type:decimal(10,2) unsigned;not null;"`// 余额
 ServiceCharge float64`gorm:"column:serviceCharge;type:decimal(10,2) unsigned;not null;"`// 手续费
 ChannelServiceCharge float64`gorm:"column:channelServiceCharge;type:decimal(10,2) unsigned;not null;"`// 上游手续费
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName amount_pay
func (AmountPay) TableName() string { 
	return "amount_pay" 
}

//AmountSettlement -> amount_settlement 代付订单金额统计
type AmountSettlement struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 Amount float64`gorm:"column:amount;type:decimal(10,2) unsigned;not null;"`// 金额
 MerchantID uint`gorm:"column:merchantId;type:int(11) unsigned;not null;"`// 商户ID
 MerchantNo string`gorm:"column:merchantNo;type:varchar(50);not null;"`// 商户号
 ChannelMerchantID uint`gorm:"column:channelMerchantId;type:int(11) unsigned;not null;"`// 商户ID
 ChannelMerchantNo string`gorm:"column:channelMerchantNo;type:varchar(50);not null;"`// 商户号
 AccountDate time.Time`gorm:"column:accountDate;type:date;not null;"`// 财务日期
 TransferTimes int`gorm:"column:transferTimes;type:int(11);not null;"`// 代付次数
 ServiceCharge float64`gorm:"column:serviceCharge;type:decimal(10,2) unsigned;not null;"`// 手续费
 ChannelServiceCharge float64`gorm:"column:channelServiceCharge;type:decimal(10,2) unsigned;not null;"`// 上游手续费
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName amount_settlement
func (AmountSettlement) TableName() string { 
	return "amount_settlement" 
}

//BalanceAdjustment -> balance_adjustment 商户余额调整
type BalanceAdjustment struct {
 AdjustmentID uint`gorm:"column:adjustmentId;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 Amount float64`gorm:"column:amount;type:decimal(10,2) unsigned;not null;"`// 金额
 ApplyPerson string`gorm:"column:applyPerson;type:varchar(50);not null;"`// 申请人
 AuditPerson string`gorm:"column:auditPerson;type:varchar(50);"`// 审核人
 AuditTime time.Time`gorm:"column:auditTime;type:datetime;"`// 审核时间
 BankrollDirection interface{}`gorm:"column:bankrollDirection;type:enum('Restore','Retrieve','Freeze','Unfreeze','Recharge');not null;"`// 资金方向(Restore=返还, Retrieve=追收, Freeze=冻结， Unfreeze=解冻)
 BankrollType interface{}`gorm:"column:bankrollType;type:enum('AccountBalance','ServiceCharge');not null;"`// 资金类型(AccountBalance=账户资金, ServiceCharge=手续费)
 Status interface{}`gorm:"column:status;type:enum('Success','Fail','Freeze','Unaudit');not null;"`// 审核状态(通过，不通过，待解冻, 待审核)
 Summary string`gorm:"column:summary;type:varchar(50);not null;"`// 摘要
 MerchantID uint`gorm:"column:merchantId;type:int(11) unsigned;not null;"`// 商户ID
 MerchantNo string`gorm:"column:merchantNo;type:varchar(50);not null;"`// 商户号
 PlatformOrderNo string`gorm:"column:platformOrderNo;type:varchar(255);not null;"`// 平台订单号
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName balance_adjustment
func (BalanceAdjustment) TableName() string { 
	return "balance_adjustment" 
}

//Banks -> banks 代付银行列表
type Banks struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 Name string`gorm:"column:name;type:varchar(64);not null;"`// 名称
 Code string`gorm:"column:code;type:varchar(15);not null;"`// 代号
 Status interface{}`gorm:"column:status;type:enum('enabled','disabled');not null;"`// 
 StartTime time.Time`gorm:"column:start_time;type:datetime;"`// 开始时间
 EndTime time.Time`gorm:"column:end_time;type:datetime;"`// 结束时间
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName banks
func (Banks) TableName() string { 
	return "banks" 
}

//BlackUserSettlement -> black_user_settlement 
type BlackUserSettlement struct {
 BlackUserID int`gorm:"column:blackUserId;primary_key;auto_increment;type:int(11);not null;"`// 
 BlackUserType string`gorm:"column:blackUserType;type:varchar(50);not null;"`// 
 BlackUserAccount string`gorm:"column:blackUserAccount;type:varchar(50);"`// 
 BlackUserName string`gorm:"column:blackUserName;type:varchar(50);"`// 
 BlackUserStatus string`gorm:"column:blackUserStatus;type:varchar(50);"`// 
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;"`// 
}

// TableName black_user_settlement
func (BlackUserSettlement) TableName() string { 
	return "black_user_settlement" 
}

//ChannelBalanceIssue -> channel_balance_issue 渠道余额下发记录
type ChannelBalanceIssue struct {
 IssueID uint`gorm:"column:issueId;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 ChannelID uint`gorm:"column:channelId;type:int(11) unsigned;not null;"`// 渠道ID
 ChannelNo string`gorm:"column:channelNo;type:varchar(50);not null;"`// 渠道号
 BankCode string`gorm:"column:bankCode;type:varchar(50);not null;"`// 取款银行
 CardNo string`gorm:"column:cardNo;type:varchar(50);not null;"`// 银行卡号
 UserName string`gorm:"column:userName;type:varchar(50);not null;"`// 姓名
 IssueAmount float64`gorm:"column:issueAmount;type:decimal(12,2) unsigned;not null;"`// 取款金额
 AdminName string`gorm:"column:adminName;type:varchar(50);"`// 操作用户
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
 Type string`gorm:"column:type;type:varchar(64);not null;"`// 使用场景/类型
 ClassOpt string`gorm:"column:classOpt;type:varchar(255);not null;"`// 查询结果之后需要调用的方法处理后续逻辑JSON格式
 ForeignID int`gorm:"column:foreign_id;type:int(11);not null;"`// 对应场景的ID
}

// TableName channel_balance_issue
func (ChannelBalanceIssue) TableName() string { 
	return "channel_balance_issue" 
}

//ChannelBalanceQuery -> channel_balance_query 上游渠道余额查询
type ChannelBalanceQuery struct {
 BID uint`gorm:"column:bId;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 ChannelID uint`gorm:"column:channelId;type:int(11) unsigned;not null;"`// 渠道ID
 ChannelNo string`gorm:"column:channelNo;type:varchar(50);not null;"`// 上游渠道号
 Channel string`gorm:"column:channel;type:varchar(50);not null;"`// 渠道名称
 ChannelBalance float64`gorm:"column:channelBalance;type:decimal(12,2) unsigned;not null;"`// 上游渠道余额
 MerchantCount int`gorm:"column:merchantCount;type:int(11);not null;"`// 上游对应的下游商户数
 MerchantBalance float64`gorm:"column:merchantBalance;type:decimal(12,2) unsigned;not null;"`// 上游对应下游的商户余额
 DiffValue float64`gorm:"column:diffValue;type:decimal(12,2);not null;"`// 差值
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName channel_balance_query
func (ChannelBalanceQuery) TableName() string { 
	return "channel_balance_query" 
}

//ChannelDailyStats -> channel_daily_stats 上游渠道每日数据统计
type ChannelDailyStats struct {
 DailyID uint`gorm:"column:dailyId;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 ChannelMerchantID uint`gorm:"column:channelMerchantId;type:int(11) unsigned;not null;"`// 渠道ID
 ChannelMerchantNo uint`gorm:"column:channelMerchantNo;type:int(11) unsigned;not null;"`// 渠道号
 PayCount uint`gorm:"column:payCount;type:int(11) unsigned;not null;"`// 今日支付笔数
 PayAmount float64`gorm:"column:payAmount;type:decimal(10,2) unsigned;not null;"`// 今日支付金额
 PayServiceFees float64`gorm:"column:payServiceFees;type:decimal(10,2) unsigned;not null;"`// 今日支付手续费
 PayChannelServiceFees float64`gorm:"column:payChannelServiceFees;type:decimal(10,2) unsigned;not null;"`// 今日上游支付手续费
 SettlementCount uint`gorm:"column:settlementCount;type:int(11) unsigned;not null;"`// 今日代付笔数
 SettlementAmount float64`gorm:"column:settlementAmount;type:decimal(10,2) unsigned;not null;"`// 今日代付金额
 SettlementServiceFees float64`gorm:"column:settlementServiceFees;type:decimal(10,2) unsigned;not null;"`// 今日代付手续费
 SettlementChannelServiceFees float64`gorm:"column:settlementChannelServiceFees;type:decimal(10,2) unsigned;not null;"`// 今日上游代付手续费
 ChargeCount uint`gorm:"column:chargeCount;type:int(11) unsigned;not null;"`// 今日充值笔数
 ChargeAmount float64`gorm:"column:chargeAmount;type:decimal(10,2) unsigned;not null;"`// 今日充值金额
 ChargeServiceFees float64`gorm:"column:chargeServiceFees;type:decimal(10,2) unsigned;not null;"`// 今日充值手续费
 ChargeChannelServiceFees float64`gorm:"column:chargeChannelServiceFees;type:decimal(10,2) unsigned;not null;"`// 今日上游充值手续费
 AccountDate time.Time`gorm:"column:accountDate;type:date;not null;"`// 财务日期
 AgentPayFees float64`gorm:"column:agentPayFees;type:decimal(10,2) unsigned;not null;"`// 代理支付手续费
 AgentsettlementFees float64`gorm:"column:agentsettlementFees;type:decimal(10,2) unsigned;not null;"`// 代理代付手续费
 AgentchargeFees float64`gorm:"column:agentchargeFees;type:decimal(10,2) unsigned;not null;"`// 代理充值手续费
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName channel_daily_stats
func (ChannelDailyStats) TableName() string { 
	return "channel_daily_stats" 
}

//ChannelMerchant -> channel_merchant 渠道商户信息管理
type ChannelMerchant struct {
 ChannelMerchantID uint`gorm:"column:channelMerchantId;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 ChannelMerchantNo string`gorm:"column:channelMerchantNo;type:varchar(50);not null;"`// 商户号
 Channel string`gorm:"column:channel;type:varchar(50);not null;"`// 支付渠道
 Status interface{}`gorm:"column:status;type:enum('Normal','Close','Exception','Deleted');not null;"`// 状态(正常，关闭,异常，删除)
 PlatformNo string`gorm:"column:platformNo;type:varchar(50);not null;"`// 平台号码
 SettlementTime uint`gorm:"column:settlementTime;type:int(11) unsigned;not null;"`// 结算时间(0-23)
 D0SettlementRate interface{}`gorm:"column:D0SettlementRate;type:float unsigned;not null;"`// D0结算比例
 OneSettlementMaxAmount float64`gorm:"column:oneSettlementMaxAmount;type:decimal(10,2) unsigned;not null;"`// 单卡单日最大结算金额
 OpenPay bool`gorm:"column:openPay;type:tinyint(1);not null;"`// 支付开关
 OpenQuery bool`gorm:"column:openQuery;type:tinyint(1);not null;"`// 查询开关
 OpenSettlement bool`gorm:"column:openSettlement;type:tinyint(1);not null;"`// 结算开关
 DelegateDomain string`gorm:"column:delegateDomain;type:varchar(255);not null;"`// 代理域名
 Param string`gorm:"column:param;type:longtext;not null;"`// 商户参数
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
 Config string`gorm:"column:config;type:text;"`// 
}

// TableName channel_merchant
func (ChannelMerchant) TableName() string { 
	return "channel_merchant" 
}

//ChannelMerchantRate -> channel_merchant_rate 渠道商户费率表
type ChannelMerchantRate struct {
 RateID uint`gorm:"column:rateId;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 BankCode string`gorm:"column:bankCode;type:varchar(50);not null;"`// 银行
 CardType interface{}`gorm:"column:cardType;type:enum('','DEBIT','CREDIT');not null;"`// 银行卡类型(DEBIT=借记卡,CREDIT=信用卡)
 BeginTime time.Time`gorm:"column:beginTime;type:date;"`// 生效时间
 EndTime time.Time`gorm:"column:endTime;type:date;"`// 失效时间
 MaxServiceCharge float64`gorm:"column:maxServiceCharge;type:decimal(10,2) unsigned;not null;"`// 最大手续费
 MinServiceCharge float64`gorm:"column:minServiceCharge;type:decimal(10,2) unsigned;not null;"`// 最小手续费
 ChannelMerchantID uint`gorm:"column:channelMerchantId;type:int(11) unsigned;not null;"`// 商户ID
 ChannelMerchantNo string`gorm:"column:channelMerchantNo;type:varchar(50);not null;"`// 商户号
 PayType string`gorm:"column:payType;type:varchar(100);not null;"`// 支付方式(EBank=网银,Quick=快捷,OfflineWechatQR=线下微信扫码,OfflineAlipayQR=线下支付宝扫码,\n            OnlineWechatQR=线上微信扫码,OnlineAlipayQR=线上支付宝扫码,OnlineWechatH5=线上微信H5,OnlineAlipayH5=线上支付宝H5,\n            UnionPayQR=银联扫码,D0Settlement=D0结算,EnterpriseEBank=企业网银,PersonalEBank=个人网银)
 ProductType interface{}`gorm:"column:productType;type:enum('Pay','Settlement','Recharge');not null;"`// 产品类型
 Rate interface{}`gorm:"column:rate;type:float unsigned;not null;"`// 费率值
 Fixed interface{}`gorm:"column:fixed;type:float unsigned;not null;"`// 固定收费，基本收费
 RateType interface{}`gorm:"column:rateType;type:enum('Rate','FixedValue','Mixed');not null;"`// 费率类型
 Status interface{}`gorm:"column:status;type:enum('Normal','Close');not null;"`// 状态
 Channel string`gorm:"column:channel;type:varchar(50);not null;"`// 渠道名称
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName channel_merchant_rate
func (ChannelMerchantRate) TableName() string { 
	return "channel_merchant_rate" 
}

//ChannelPayConfig -> channel_pay_config 上游支付渠道配置表
type ChannelPayConfig struct {
 SetID uint`gorm:"column:setId;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 BankCode string`gorm:"column:bankCode;type:varchar(50);"`// 银行
 CardType interface{}`gorm:"column:cardType;type:enum('','DEBIT','CREDIT');not null;"`// 银行卡类型(DEBIT=借记卡,CREDIT=信用卡)
 Channel string`gorm:"column:channel;type:varchar(50);not null;"`// 渠道名称
 ChannelMerchantID int`gorm:"column:channelMerchantId;type:int(11);not null;"`// 渠道商户
 ChannelMerchantNo string`gorm:"column:channelMerchantNo;type:varchar(50);not null;"`// 渠道商户号
 PayChannelStatus interface{}`gorm:"column:payChannelStatus;type:enum('Normal','Close');not null;"`// 支付渠道状态
 PayType interface{}`gorm:"column:payType;type:enum('EBank','Quick','OfflineWechatQR','OfflineAlipayQR','OnlineWechatQR','OnlineAlipayQR','OnlineWechatH5','OnlineAlipayH5','UnionPayQR','D0Settlement','UnionPay','OnlineAlipayOriginalH5','OnlineWechatOriginalH5');not null;"`// 支付方式(EBank=网银,Quick=快捷,OfflineWechatQR=线下微信扫码,OfflineAlipayQR=线下支付宝扫码,
            OnlineWechatQR=线上微信扫码,OnlineAlipayQR=线上支付宝扫码,OnlineWechatH5=线上微信H5,OnlineAlipayH5=线上支付宝H5,
OnlineAlipayOriginalH5=线上支付宝原生H5,OnlineWechatOriginalH5=线上微信原生H5,UnionPay=银联快捷/云闪付,UnionPayQR=银联扫码,D0Settlement=D0结算)
 OpenTimeLimit bool`gorm:"column:openTimeLimit;type:tinyint(1);not null;"`// 是否开启控制交易时间
 BeginTime uint`gorm:"column:beginTime;type:int(11) unsigned;not null;"`// 开始时间(00:00格式转整形)
 EndTime uint`gorm:"column:endTime;type:int(11) unsigned;not null;"`// 结束时间(00:00格式转整形)
 OpenOneAmountLimit bool`gorm:"column:openOneAmountLimit;type:tinyint(1);not null;"`// 是否开启控制单笔金额控制
 OneMaxAmount float64`gorm:"column:oneMaxAmount;type:decimal(10,2) unsigned;not null;"`// 单笔最大金额
 OneMinAmount float64`gorm:"column:oneMinAmount;type:decimal(10,2) unsigned;not null;"`// 单笔最小金额
 OpenDayAmountLimit bool`gorm:"column:openDayAmountLimit;type:tinyint(1);not null;"`// 是否开启单日累计金额控制
 DayAmountLimit float64`gorm:"column:dayAmountLimit;type:decimal(10,2) unsigned;not null;"`// 累计金额限制
 OpenDayNumLimit bool`gorm:"column:openDayNumLimit;type:tinyint(1);not null;"`// 是否开启单日累计笔数控制
 DayNumLimit uint`gorm:"column:dayNumLimit;type:int(11) unsigned;not null;"`// 累计次数限制
 Status interface{}`gorm:"column:status;type:enum('Normal','Close');not null;"`// 配置状态
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName channel_pay_config
func (ChannelPayConfig) TableName() string { 
	return "channel_pay_config" 
}

//ChannelSettlementConfig -> channel_settlement_config 上游结算渠道配置表
type ChannelSettlementConfig struct {
 SetID uint`gorm:"column:setId;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 Channel string`gorm:"column:channel;type:varchar(50);not null;"`// 渠道名称
 ChannelMerchantID int`gorm:"column:channelMerchantId;type:int(11);not null;"`// 渠道商户
 ChannelMerchantNo string`gorm:"column:channelMerchantNo;type:varchar(50);not null;"`// 渠道商户号
 SettlementAccountType interface{}`gorm:"column:settlementAccountType;type:enum('UsableAccount','T1Account');not null;"`// 代付账户类型
 AccountBalance float64`gorm:"column:accountBalance;type:decimal(10,2) unsigned;not null;"`// 账户余额
 AccountReservedBalance float64`gorm:"column:accountReservedBalance;type:decimal(10,2) unsigned;not null;"`// 账户最少保留金额
 OpenTimeLimit bool`gorm:"column:openTimeLimit;type:tinyint(1);not null;"`// 是否开启控制交易时间
 BeginTime int`gorm:"column:beginTime;type:int(11);not null;"`// 开始时间(00:00格式转整形)
 EndTime int`gorm:"column:endTime;type:int(11);not null;"`// 结束时间(00:00格式转整形)
 OpenOneAmountLimit bool`gorm:"column:openOneAmountLimit;type:tinyint(1);not null;"`// 是否开启控制单笔金额控制
 OneMaxAmount float64`gorm:"column:oneMaxAmount;type:decimal(10,2) unsigned;not null;"`// 单笔最大金额
 OneMinAmount float64`gorm:"column:oneMinAmount;type:decimal(10,2) unsigned;not null;"`// 单笔最小金额
 OpenDayAmountLimit bool`gorm:"column:openDayAmountLimit;type:tinyint(1);not null;"`// 是否开启单日累计金额控制
 DayAmountLimit float64`gorm:"column:dayAmountLimit;type:decimal(10,2) unsigned;not null;"`// 累计金额限制
 OpenDayNumLimit bool`gorm:"column:openDayNumLimit;type:tinyint(1);not null;"`// 是否开启单日累计笔数控制
 DayNumLimit uint`gorm:"column:dayNumLimit;type:int(11) unsigned;not null;"`// 累计次数限制
 OpenCardDayNumLimit bool`gorm:"column:openCardDayNumLimit;type:tinyint(1);not null;"`// 是否开启单卡单日累计笔数控制
 CardDayNumLimit uint`gorm:"column:cardDayNumLimit;type:int(11) unsigned;not null;"`// 累计次数限制
 OpenOneSettlementMaxAmountLimit bool`gorm:"column:openOneSettlementMaxAmountLimit;type:tinyint(1);not null;"`// 是否开启单卡单日最大结算金额控制
 OneSettlementMaxAmount float64`gorm:"column:oneSettlementMaxAmount;type:decimal(10,2) unsigned;not null;"`// 单卡单日最大结算金额
 Status interface{}`gorm:"column:status;type:enum('Normal','Close');not null;"`// 配置状态
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName channel_settlement_config
func (ChannelSettlementConfig) TableName() string { 
	return "channel_settlement_config" 
}

//Finance -> finance 财务明细
type Finance struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 Amount float64`gorm:"column:amount;type:decimal(10,2) unsigned;not null;"`// 金额
 Balance float64`gorm:"column:balance;type:decimal(10,2) unsigned;not null;"`// 余额
 MerchantID uint`gorm:"column:merchantId;type:int(11) unsigned;not null;"`// 商户号
 MerchantNo string`gorm:"column:merchantNo;type:varchar(50);not null;"`// 商户号
 Summary string`gorm:"column:summary;type:varchar(500);not null;"`// 描述
 SourceDesc string`gorm:"column:sourceDesc;type:varchar(50);not null;"`// 来源描述
 SourceID uint`gorm:"column:sourceId;type:int(11) unsigned;not null;"`// ID
 FinanceType interface{}`gorm:"column:financeType;type:enum('PayIn','PayOut');not null;"`// 收支类型(PayIn=收入,PayOut=支出)
 PlatformOrderNo string`gorm:"column:platformOrderNo;type:varchar(21);not null;"`// 平台订单号
 AccountDate time.Time`gorm:"column:accountDate;type:date;not null;"`// 账务日期
 AccountType interface{}`gorm:"column:accountType;type:enum('SettledAccount','SettlementAccount','AdvanceAccount','ServiceChargeAccount');not null;"`// 账户类型(SettledAccount=已结算账户,SettlementAccount=未结算账户,AdvanceAccount=垫资账户,ServiceChargeAccount=手续费账户)
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
 MerchantOrderNo string`gorm:"column:merchantOrderNo;type:varchar(50);"`// 商户订单号
 OperateSource interface{}`gorm:"column:operateSource;type:enum('ports','merchant','admin');not null;"`// 操作来源(ports:接口,merchant:商户后台,admin:管理后台)
}

// TableName finance
func (Finance) TableName() string { 
	return "finance" 
}

//HistoryBackups -> history_backups 数据迁移表
type HistoryBackups struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 Type uint8`gorm:"column:type;type:tinyint(3) unsigned;not null;"`// 
 Text string`gorm:"column:text;type:text;not null;"`// 
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
}

// TableName history_backups
func (HistoryBackups) TableName() string { 
	return "history_backups" 
}

//Merchant -> merchant 商户信息表
type Merchant struct {
 MerchantID uint`gorm:"column:merchantId;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 MerchantNo string`gorm:"column:merchantNo;type:varchar(50);not null;"`// 商户号
 FullName string`gorm:"column:fullName;type:varchar(50);not null;"`// 商户全称
 ShortName string`gorm:"column:shortName;type:varchar(50);not null;"`// 商户简称
 PayerName string`gorm:"column:payerName;type:varchar(100);not null;"`// 商户付款人信息
 Status interface{}`gorm:"column:status;type:enum('Normal','Close');not null;"`// 状态(正常，关闭)
 PlatformNo string`gorm:"column:platformNo;type:varchar(50);not null;"`// 平台号码
 D0SettlementRate interface{}`gorm:"column:D0SettlementRate;type:float unsigned;not null;"`// D0垫资比例
 SettlementTime int`gorm:"column:settlementTime;type:int(11);not null;"`// 结算时间
 SettlementType interface{}`gorm:"column:settlementType;type:enum('D0','D1','T0','T1');not null;"`// 商户结算方式
 OneSettlementMaxAmount float64`gorm:"column:oneSettlementMaxAmount;type:decimal(10,2) unsigned;not null;"`// 单卡单日最大结算金额
 OpenPay bool`gorm:"column:openPay;type:tinyint(1);not null;"`// 支付开关
 OpenQuery bool`gorm:"column:openQuery;type:tinyint(1);not null;"`// 查询开关
 OpenSettlement bool`gorm:"column:openSettlement;type:tinyint(1);not null;"`// 结算开关
 OpenAliSettlement bool`gorm:"column:openAliSettlement;type:tinyint(1);not null;"`// 支付宝结算开关
 OpenBackNotice bool`gorm:"column:openBackNotice;type:tinyint(1);not null;"`// 后台通知开关
 OpenCheckAccount bool`gorm:"column:openCheckAccount;type:tinyint(1);not null;"`// 对账开关
 OpenCheckDomain bool`gorm:"column:openCheckDomain;type:tinyint(1);not null;"`// 域名验证开关
 OpenFrontNotice bool`gorm:"column:openFrontNotice;type:tinyint(1);not null;"`// 前台通知开关
 OpenRepayNotice bool`gorm:"column:openRepayNotice;type:tinyint(1);not null;"`// 
 SignKey string`gorm:"column:signKey;type:varchar(500);not null;"`// 加密key
 Domain string`gorm:"column:domain;type:varchar(255);not null;"`// 域名
 Description string`gorm:"column:description;type:varchar(255);not null;"`// 描述
 BackNoticeMaxNum int`gorm:"column:backNoticeMaxNum;type:int(11);not null;"`// 最大回调次数
 PlatformType interface{}`gorm:"column:platformType;type:enum('Normal','Proxy');not null;"`// 平台(一般、代理)
 IpWhite string`gorm:"column:ipWhite;type:varchar(512);not null;"`// 商户IP白名单
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
 LoginIPWhite string`gorm:"column:loginIpWhite;type:varchar(512);not null;"`// 登录白名单
 OpenManualSettlement bool`gorm:"column:openManualSettlement;type:tinyint(1);not null;"`// 手动代付开关
}

// TableName merchant
func (Merchant) TableName() string { 
	return "merchant" 
}

//MerchantAccount -> merchant_account 商户用户表
type MerchantAccount struct {
 AccountID uint`gorm:"column:accountId;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 LoginName string`gorm:"column:loginName;type:varchar(50);not null;"`// 登录名称
 LoginPwd string`gorm:"column:loginPwd;type:varchar(50);not null;"`// 密码
 SecurePwd string`gorm:"column:securePwd;type:varchar(255);not null;"`// 支付密码
 UserName string`gorm:"column:userName;type:varchar(50);not null;"`// 商户号
 LoginFailNum int`gorm:"column:loginFailNum;type:int(11);not null;"`// 登录失败次数
 LoginPwdAlterTime time.Time`gorm:"column:loginPwdAlterTime;type:datetime;"`// 密码修改时间
 MerchantID int`gorm:"column:merchantId;type:int(11);not null;"`// 商户ID
 MerchantNo string`gorm:"column:merchantNo;type:varchar(50);not null;"`// 商户号
 PlatformNo string`gorm:"column:platformNo;type:varchar(50);not null;"`// 平台号
 PlatformType interface{}`gorm:"column:platformType;type:enum('Normal','Proxy');not null;"`// 平台(一般、代理)
 Status interface{}`gorm:"column:status;type:enum('Normal','Exception','Close');not null;"`// 状态
 UserLevel interface{}`gorm:"column:userLevel;type:enum('MerchantManager','PlatformManager');not null;"`// 用户级别
 LatestLoginTime time.Time`gorm:"column:latestLoginTime;type:datetime;"`// 最后登录时间
 GoogleAuthSecretKey string`gorm:"column:googleAuthSecretKey;type:varchar(500);not null;"`// 谷歌auth密钥
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName merchant_account
func (MerchantAccount) TableName() string { 
	return "merchant_account" 
}

//MerchantAccountActionLog -> merchant_account_action_log 商户账号操作日志
type MerchantAccountActionLog struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 Action interface{}`gorm:"column:action;type:enum('UPDATE_PASSWORD','UPDATE_PAY_PASSWORD','BIND_GOOGLE_AUTH');not null;"`// 行为
 ActionBeforeData string`gorm:"column:actionBeforeData;type:text;"`// 操作前数据
 ActionAfterData string`gorm:"column:actionAfterData;type:text;"`// 操作后数据
 AccountID uint`gorm:"column:accountId;type:int(11) unsigned;not null;"`// accountId
 Status interface{}`gorm:"column:status;type:enum('Success','Fail');not null;"`// 状态
 IpDesc string`gorm:"column:ipDesc;type:varchar(50);not null;"`// ip
 Ip string`gorm:"column:ip;type:varchar(50);not null;"`// ip
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
}

// TableName merchant_account_action_log
func (MerchantAccountActionLog) TableName() string { 
	return "merchant_account_action_log" 
}

//MerchantAccountLoginLog -> merchant_account_login_log 商户账号登录日志
type MerchantAccountLoginLog struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 Ip string`gorm:"column:ip;type:varchar(50);not null;"`// ip
 IpDesc string`gorm:"column:ipDesc;type:varchar(50);not null;"`// ip
 Status interface{}`gorm:"column:status;type:enum('Success','Fail');not null;"`// 状态
 AccountID uint`gorm:"column:accountId;type:int(11) unsigned;not null;"`// accountId
 Remark interface{}`gorm:"column:remark;type:enum('PASSWORD_ERROR','LOGIN_FAIL_COUNT','');not null;"`// remark(PASSWORD_ERROR=密码错误,LOGIN_FAIL_COUNT=密码登录错误次数过多)
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
}

// TableName merchant_account_login_log
func (MerchantAccountLoginLog) TableName() string { 
	return "merchant_account_login_log" 
}

//MerchantAmount -> merchant_amount 商户金额统计表
type MerchantAmount struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 MerchantID int`gorm:"column:merchantId;type:int(11);not null;"`// 商户ID
 MerchantNo string`gorm:"column:merchantNo;type:varchar(50);not null;"`// 商户号
 SettledAmount float64`gorm:"column:settledAmount;type:decimal(10,2) unsigned;not null;"`// 已结算金额
 SettlementAmount float64`gorm:"column:settlementAmount;type:decimal(10,2) unsigned;not null;"`// 未结算金额
 FreezeAmount float64`gorm:"column:freezeAmount;type:decimal(10,2) unsigned;not null;"`// 冻结金额
 ModTime time.Time`gorm:"column:modTime;type:datetime;not null;"`// 
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName merchant_amount
func (MerchantAmount) TableName() string { 
	return "merchant_amount" 
}

//MerchantBankCard -> merchant_bank_card 商户后台提现银行卡信息
type MerchantBankCard struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 BankCode string`gorm:"column:bankCode;type:varchar(50);not null;"`// 所属银行
 BankName string`gorm:"column:bankName;type:varchar(50);not null;"`// 开户行
 Province string`gorm:"column:province;type:varchar(50);not null;"`// 开户行所属省
 City string`gorm:"column:city;type:varchar(50);not null;"`// 开户行所属市
 District string`gorm:"column:district;type:varchar(50);not null;"`// 开户行所属区
 AccountName string`gorm:"column:accountName;type:varchar(50);not null;"`// 持卡人姓名
 AccountNo string`gorm:"column:accountNo;type:varchar(500);not null;"`// 银行卡号
 MerchantID string`gorm:"column:merchantId;type:varchar(500);not null;"`// 商户号ID
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
 Status interface{}`gorm:"column:status;type:enum('Normal','Deleted');not null;"`// 状态(正常、删除)
}

// TableName merchant_bank_card
func (MerchantBankCard) TableName() string { 
	return "merchant_bank_card" 
}

//MerchantChannel -> merchant_channel 商户支付渠道配置表
type MerchantChannel struct {
 SetID uint`gorm:"column:setId;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 MerchantID uint`gorm:"column:merchantId;type:int(11) unsigned;not null;"`// 下游商户ID
 MerchantNo string`gorm:"column:merchantNo;type:varchar(50);not null;"`// 下游商户号
 BankCode string`gorm:"column:bankCode;type:varchar(50);"`// 银行
 CardType interface{}`gorm:"column:cardType;type:enum('','DEBIT','CREDIT');not null;"`// 银行卡类型(DEBIT=借记卡,CREDIT=信用卡)
 Channel string`gorm:"column:channel;type:varchar(50);not null;"`// 渠道名称
 ChannelMerchantID int`gorm:"column:channelMerchantId;type:int(11);not null;"`// 渠道商户
 ChannelMerchantNo string`gorm:"column:channelMerchantNo;type:varchar(50);not null;"`// 渠道商户号
 PayChannelStatus interface{}`gorm:"column:payChannelStatus;type:enum('Normal','Close');not null;"`// 支付渠道状态
 PayType interface{}`gorm:"column:payType;type:enum('EBank','Quick','OfflineWechatQR','OfflineAlipayQR','OnlineWechatQR','OnlineAlipayQR','OnlineWechatH5','OnlineAlipayH5','UnionPayQR');not null;"`// 支付方式(EBank=网银,Quick=快捷,OfflineWechatQR=线下微信扫码,OfflineAlipayQR=线下支付宝扫码,
        OnlineWechatQR=线上微信扫码,OnlineAlipayQR=线上支付宝扫码,OnlineWechatH5=线上微信H5,OnlineAlipayH5=线上支付宝H5,
        UnionPayQR=银联扫码,D0Settlement=D0代付)
 OpenTimeLimit bool`gorm:"column:openTimeLimit;type:tinyint(1);not null;"`// 是否开启控制交易时间
 BeginTime uint`gorm:"column:beginTime;type:int(11) unsigned;not null;"`// 开始时间(00:00格式转整形)
 EndTime uint`gorm:"column:endTime;type:int(11) unsigned;not null;"`// 结束时间(00:00格式转整形)
 OpenOneAmountLimit bool`gorm:"column:openOneAmountLimit;type:tinyint(1);not null;"`// 是否开启控制单笔金额控制
 OneMaxAmount float64`gorm:"column:oneMaxAmount;type:decimal(10,2) unsigned;not null;"`// 单笔最大金额
 OneMinAmount float64`gorm:"column:oneMinAmount;type:decimal(10,2) unsigned;not null;"`// 单笔最小金额
 OpenDayAmountLimit bool`gorm:"column:openDayAmountLimit;type:tinyint(1);not null;"`// 是否开启单日累计金额控制
 DayAmountLimit float64`gorm:"column:dayAmountLimit;type:decimal(10,2) unsigned;not null;"`// 累计金额限制
 OpenDayNumLimit bool`gorm:"column:openDayNumLimit;type:tinyint(1);not null;"`// 是否开启单日累计金额控制
 DayNumLimit uint`gorm:"column:dayNumLimit;type:int(11) unsigned;not null;"`// 累计次数限制
 Status interface{}`gorm:"column:status;type:enum('Normal','Close');not null;"`// 配置状态
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName merchant_channel
func (MerchantChannel) TableName() string { 
	return "merchant_channel" 
}

//MerchantChannelRecharge -> merchant_channel_recharge 商户支付渠道配置表
type MerchantChannelRecharge struct {
 SetID uint`gorm:"column:setId;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 MerchantID uint`gorm:"column:merchantId;type:int(11) unsigned;not null;"`// 下游商户ID
 MerchantNo string`gorm:"column:merchantNo;type:varchar(50);not null;"`// 下游商户号
 BankCode string`gorm:"column:bankCode;type:varchar(50);"`// 银行
 CardType interface{}`gorm:"column:cardType;type:enum('','DEBIT','CREDIT');not null;"`// 银行卡类型(DEBIT=借记卡,CREDIT=信用卡)
 Channel string`gorm:"column:channel;type:varchar(50);not null;"`// 渠道名称
 ChannelMerchantID int`gorm:"column:channelMerchantId;type:int(11);not null;"`// 渠道商户
 ChannelMerchantNo string`gorm:"column:channelMerchantNo;type:varchar(50);not null;"`// 渠道商户号
 PayType string`gorm:"column:payType;type:varchar(50);not null;"`// 充值方式，查看rechargeTypeCode文件
 PayChannelStatus interface{}`gorm:"column:payChannelStatus;type:enum('Normal','Close');not null;"`// 支付渠道状态
 OpenTimeLimit bool`gorm:"column:openTimeLimit;type:tinyint(1);not null;"`// 是否开启控制交易时间
 BeginTime uint`gorm:"column:beginTime;type:int(11) unsigned;not null;"`// 开始时间(00:00格式转整形)
 EndTime uint`gorm:"column:endTime;type:int(11) unsigned;not null;"`// 结束时间(00:00格式转整形)
 OpenOneAmountLimit bool`gorm:"column:openOneAmountLimit;type:tinyint(1);not null;"`// 是否开启控制单笔金额控制
 OneMaxAmount float64`gorm:"column:oneMaxAmount;type:decimal(10,2) unsigned;not null;"`// 单笔最大金额
 OneMinAmount float64`gorm:"column:oneMinAmount;type:decimal(10,2) unsigned;not null;"`// 单笔最小金额
 OpenDayAmountLimit bool`gorm:"column:openDayAmountLimit;type:tinyint(1);not null;"`// 是否开启单日累计金额控制
 DayAmountLimit float64`gorm:"column:dayAmountLimit;type:decimal(10,2) unsigned;not null;"`// 累计金额限制
 OpenDayNumLimit bool`gorm:"column:openDayNumLimit;type:tinyint(1);not null;"`// 是否开启单日累计金额控制
 DayNumLimit uint`gorm:"column:dayNumLimit;type:int(11) unsigned;not null;"`// 累计次数限制
 Priority uint`gorm:"column:priority;type:int(11) unsigned;not null;"`// 优先级
 Status interface{}`gorm:"column:status;type:enum('Normal','Close');not null;"`// 配置状态
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName merchant_channel_recharge
func (MerchantChannelRecharge) TableName() string { 
	return "merchant_channel_recharge" 
}

//MerchantChannelSettlement -> merchant_channel_settlement 商户结算渠道配置表
type MerchantChannelSettlement struct {
 SetID uint`gorm:"column:setId;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 MerchantID int`gorm:"column:merchantId;type:int(11);not null;"`// 下游商户ID
 MerchantNo string`gorm:"column:merchantNo;type:varchar(50);not null;"`// 下游商户号
 Channel string`gorm:"column:channel;type:varchar(50);not null;"`// 渠道名称
 ChannelMerchantID int`gorm:"column:channelMerchantId;type:int(11);not null;"`// 渠道商户
 ChannelMerchantNo string`gorm:"column:channelMerchantNo;type:varchar(50);not null;"`// 渠道商户号
 SettlementChannelStatus interface{}`gorm:"column:settlementChannelStatus;type:enum('Normal','Close');not null;"`// 代付渠道状态
 SettlementAccountType interface{}`gorm:"column:settlementAccountType;type:enum('UsableAccount','T1Account');not null;"`// 代付账户类型
 AccountBalance float64`gorm:"column:accountBalance;type:decimal(10,2) unsigned;not null;"`// 账户余额
 AccountReservedBalance float64`gorm:"column:accountReservedBalance;type:decimal(10,2) unsigned;not null;"`// 账户最少保留金额
 OpenTimeLimit bool`gorm:"column:openTimeLimit;type:tinyint(1);not null;"`// 是否开启控制交易时间
 BeginTime int`gorm:"column:beginTime;type:int(11);not null;"`// 开始时间(00:00格式转整形)
 EndTime int`gorm:"column:endTime;type:int(11);not null;"`// 结束时间(00:00格式转整形)
 OpenOneAmountLimit bool`gorm:"column:openOneAmountLimit;type:tinyint(1);not null;"`// 是否开启控制单笔金额控制
 OneMaxAmount float64`gorm:"column:oneMaxAmount;type:decimal(10,2) unsigned;not null;"`// 单笔最大金额
 OneMinAmount float64`gorm:"column:oneMinAmount;type:decimal(10,2) unsigned;not null;"`// 单笔最小金额
 OpenDayAmountLimit bool`gorm:"column:openDayAmountLimit;type:tinyint(1);not null;"`// 是否开启单日累计金额控制
 DayAmountLimit float64`gorm:"column:dayAmountLimit;type:decimal(10,2) unsigned;not null;"`// 累计金额限制
 OpenDayNumLimit bool`gorm:"column:openDayNumLimit;type:tinyint(1);not null;"`// 是否开启单日累计金额控制
 DayNumLimit uint`gorm:"column:dayNumLimit;type:int(11) unsigned;not null;"`// 累计次数限制
 Status interface{}`gorm:"column:status;type:enum('Normal','Close');not null;"`// 配置状态
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName merchant_channel_settlement
func (MerchantChannelSettlement) TableName() string { 
	return "merchant_channel_settlement" 
}

//MerchantDailyStats -> merchant_daily_stats 商户每日数据统计
type MerchantDailyStats struct {
 DailyID uint`gorm:"column:dailyId;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 MerchantID uint`gorm:"column:merchantId;type:int(11) unsigned;not null;"`// 商户ID
 MerchantNo string`gorm:"column:merchantNo;type:varchar(50);not null;"`// 商户号
 PayCount uint`gorm:"column:payCount;type:int(11) unsigned;not null;"`// 今日支付笔数
 PayAmount float64`gorm:"column:payAmount;type:decimal(10,2) unsigned;not null;"`// 今日支付金额
 PayServiceFees float64`gorm:"column:payServiceFees;type:decimal(10,2) unsigned;not null;"`// 今日支付手续费
 PayChannelServiceFees float64`gorm:"column:payChannelServiceFees;type:decimal(10,2) unsigned;not null;"`// 今日上游支付手续费
 SettlementCount uint`gorm:"column:settlementCount;type:int(11) unsigned;not null;"`// 今日代付比数
 SettlementAmount float64`gorm:"column:settlementAmount;type:decimal(10,2) unsigned;not null;"`// 今日代付金额
 SettlementServiceFees float64`gorm:"column:settlementServiceFees;type:decimal(10,2) unsigned;not null;"`// 今日代付手续费
 SettlementChannelServiceFees float64`gorm:"column:settlementChannelServiceFees;type:decimal(10,2) unsigned;not null;"`// 今日上游代付手续费
 ChargeCount uint`gorm:"column:chargeCount;type:int(11) unsigned;not null;"`// 今日充值笔数
 ChargeAmount float64`gorm:"column:chargeAmount;type:decimal(10,2) unsigned;not null;"`// 今日充值金额
 ChargeServiceFees float64`gorm:"column:chargeServiceFees;type:decimal(10,2) unsigned;not null;"`// 今日充值手续费
 ChargeChannelServiceFees float64`gorm:"column:chargeChannelServiceFees;type:decimal(10,2) unsigned;not null;"`// 今日上游充值手续费
 AccountDate time.Time`gorm:"column:accountDate;type:date;not null;"`// 财务日期
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
 ChannelMerchantID uint`gorm:"column:channelMerchantId;type:int(11) unsigned;not null;"`// 渠道ID
 ChannelMerchantNo uint`gorm:"column:channelMerchantNo;type:int(11) unsigned;not null;"`// 渠道号
 AgentPayFees float64`gorm:"column:agentPayFees;type:decimal(10,2) unsigned;not null;"`// 代理支付手续费
 AgentsettlementFees float64`gorm:"column:agentsettlementFees;type:decimal(10,2) unsigned;not null;"`// 代理代付手续费
 AgentchargeFees float64`gorm:"column:agentchargeFees;type:decimal(10,2) unsigned;not null;"`// 代理充值手续费
}

// TableName merchant_daily_stats
func (MerchantDailyStats) TableName() string { 
	return "merchant_daily_stats" 
}

//MerchantNotice -> merchant_notice 
type MerchantNotice struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 CreatedAccountID int`gorm:"column:createdAccountId;type:int(11);"`// 创建人id
 PublishedAccountID int`gorm:"column:publishedAccountId;type:int(11);"`// 发布人id
 Type interface{}`gorm:"column:type;type:enum('default','optional');not null;"`// default:全部;optional：局部
 Recipient string`gorm:"column:recipient;type:varchar(2000);"`// 接收人（自定义，会员层级）用户名称,层级id，用','隔开
 Title string`gorm:"column:title;type:varchar(255);not null;"`// 标题
 Content string`gorm:"column:content;type:varchar(2000);"`// 内容
 Status interface{}`gorm:"column:status;type:enum('published','unpublished');not null;"`// published：已发布；unpublished：未发布
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;"`// 
 PublishedTime time.Time`gorm:"column:published_time;type:datetime;"`// 发布时间
}

// TableName merchant_notice
func (MerchantNotice) TableName() string { 
	return "merchant_notice" 
}

//MerchantRate -> merchant_rate 商户费率表
type MerchantRate struct {
 RateID uint`gorm:"column:rateId;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 BankCode string`gorm:"column:bankCode;type:varchar(50);not null;"`// 银行
 CardType interface{}`gorm:"column:cardType;type:enum('','DEBIT','CREDIT');not null;"`// 银行卡类型(DEBIT=借记卡,CREDIT=信用卡)
 BeginTime time.Time`gorm:"column:beginTime;type:date;"`// 生效时间
 EndTime time.Time`gorm:"column:endTime;type:date;"`// 失效时间
 MaxServiceCharge float64`gorm:"column:maxServiceCharge;type:decimal(10,2) unsigned;not null;"`// 最大手续费
 MinServiceCharge float64`gorm:"column:minServiceCharge;type:decimal(10,2) unsigned;not null;"`// 最小手续费
 MerchantID uint`gorm:"column:merchantId;type:int(11) unsigned;not null;"`// 商户ID
 MerchantNo string`gorm:"column:merchantNo;type:varchar(50);not null;"`// 商户号
 PayType interface{}`gorm:"column:payType;type:enum('EBank','Quick','OfflineWechatQR','OfflineAlipayQR','OnlineWechatQR','OnlineAlipayQR','OnlineWechatH5','OnlineAlipayH5','UnionPayQR','D0Settlement','PersonalEBank','EnterpriseEBank','PersonalEBankDNA','AlipayEBank','EnterpriseAlipay');not null;"`// 支付方式(EBank=网银,Quick=快捷,OfflineWechatQR=线下微信扫码,OfflineAlipayQR=线下支付宝扫码,
            OnlineWechatQR=线上微信扫码,OnlineAlipayQR=线上支付宝扫码,OnlineWechatH5=线上微信H5,OnlineAlipayH5=线上支付宝H5,
OnlineAlipayOriginalH5=线上支付宝原生H5,OnlineWechatOriginalH5=线上微信原生H5,UnionPay=银联快捷/云闪付,UnionPayQR=银联扫码,D0Settlement=D0结算)
 ProductType interface{}`gorm:"column:productType;type:enum('Pay','Settlement','Recharge');not null;"`// 产品类型
 Rate interface{}`gorm:"column:rate;type:float unsigned;not null;"`// 费率值
 Fixed interface{}`gorm:"column:fixed;type:float unsigned;not null;"`// 
 RateType interface{}`gorm:"column:rateType;type:enum('Rate','FixedValue','Mixed');not null;"`// 费率类型
 Status interface{}`gorm:"column:status;type:enum('Normal','Close');not null;"`// 状态
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName merchant_rate
func (MerchantRate) TableName() string { 
	return "merchant_rate" 
}

//MerchantTransformRate -> merchant_transform_rate 商户转账费率表
type MerchantTransformRate struct {
 RateID uint`gorm:"column:rateId;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 BeginTime time.Time`gorm:"column:beginTime;type:date;"`// 生效时间
 EndTime time.Time`gorm:"column:endTime;type:date;"`// 失效时间
 MaxServiceCharge float64`gorm:"column:maxServiceCharge;type:decimal(10,2) unsigned;not null;"`// 最大手续费
 MinServiceCharge float64`gorm:"column:minServiceCharge;type:decimal(10,2) unsigned;not null;"`// 最小手续费
 MerchantID uint`gorm:"column:merchantId;type:int(11) unsigned;not null;"`// 商户ID
 MerchantNo string`gorm:"column:merchantNo;type:varchar(50);not null;"`// 商户号
 Rate interface{}`gorm:"column:rate;type:float unsigned;not null;"`// 费率值
 Fixed interface{}`gorm:"column:fixed;type:float unsigned;not null;"`// 固定费率值
 RateType interface{}`gorm:"column:rateType;type:enum('Rate','Mixed','FixedValue');not null;"`// 费率类型，Mixed混合
 Status interface{}`gorm:"column:status;type:enum('Normal','Close');not null;"`// 状态
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName merchant_transform_rate
func (MerchantTransformRate) TableName() string { 
	return "merchant_transform_rate" 
}

//Message -> message 留言信息表
type Message struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 NickName string`gorm:"column:nickName;type:varchar(64);not null;"`// 留言姓名
 WhatApp string`gorm:"column:whatAPP;type:varchar(50);not null;"`// whatAPP账号
 Telegram string`gorm:"column:telegram;type:varchar(50);not null;"`// telegram账号
 Email string`gorm:"column:email;type:varchar(50);not null;"`// 电子邮箱
 Skype string`gorm:"column:skype;type:varchar(50);not null;"`// skype
 Message string`gorm:"column:message;type:varchar(2000);not null;"`// 留言内容
 Remarks string`gorm:"column:remarks;type:varchar(1000);not null;"`// 备注
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName message
func (Message) TableName() string { 
	return "message" 
}

//PayNotifyTask -> pay_notify_task 支付通知任务
type PayNotifyTask struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 Status interface{}`gorm:"column:status;type:enum('Success','Fail','Execute');not null;"`// 
 RetryCount uint`gorm:"column:retryCount;type:int(11) unsigned;not null;"`// 
 FailReason string`gorm:"column:failReason;type:varchar(255);not null;"`// 
 PlatformOrderNo string`gorm:"column:platformOrderNo;type:varchar(21);not null;"`// 平台订单号
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
}

// TableName pay_notify_task
func (PayNotifyTask) TableName() string { 
	return "pay_notify_task" 
}

//PayPushTask -> pay_push_task 支付回调任务
type PayPushTask struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 ThirdParams string`gorm:"column:thirdParams;type:varchar(2000);not null;"`// 
 StandardParams string`gorm:"column:standardParams;type:varchar(2000);not null;"`// 
 Status interface{}`gorm:"column:status;type:enum('Success','Fail','Execute');not null;"`// 
 RetryCount uint`gorm:"column:retryCount;type:int(11) unsigned;not null;"`// 
 FailReason string`gorm:"column:failReason;type:varchar(255);not null;"`// 
 IpDesc string`gorm:"column:ipDesc;type:varchar(50);not null;"`// ip
 Ip string`gorm:"column:ip;type:varchar(50);not null;"`// ip
 PlatformOrderNo string`gorm:"column:platformOrderNo;type:varchar(21);not null;"`// 平台订单号
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
}

// TableName pay_push_task
func (PayPushTask) TableName() string { 
	return "pay_push_task" 
}

//Phinxlog -> phinxlog 
type Phinxlog struct {
 Version int64`gorm:"column:version;primary_key;type:bigint(20);not null;"`// 
 MigrationName string`gorm:"column:migration_name;type:varchar(100);"`// 
 StartTime time.Time`gorm:"column:start_time;type:timestamp;"`// 
 EndTime time.Time`gorm:"column:end_time;type:timestamp;"`// 
 Breakpoint bool`gorm:"column:breakpoint;type:tinyint(1);not null;"`// 
}

// TableName phinxlog
func (Phinxlog) TableName() string { 
	return "phinxlog" 
}

//PlatformNotify -> platform_notify 平台消息
type PlatformNotify struct {
 Id int`gorm:"column:id;primary_key;auto_increment;type:int(11);not null;"`// 
 AccountID int`gorm:"column:accountId;type:int(11);not null;"`// 
 Title string`gorm:"column:title;type:varchar(100);not null;"`// 
 Content string`gorm:"column:content;type:varchar(250);not null;"`// 
 Type string`gorm:"column:type;type:varchar(50);not null;"`// 
 Platform string`gorm:"column:platform;type:varchar(50);not null;"`// 
 Status string`gorm:"column:status;type:varchar(50);not null;"`// 
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;"`// 
}

// TableName platform_notify
func (PlatformNotify) TableName() string { 
	return "platform_notify" 
}

//PlatformPayOrder -> platform_pay_order 平台支付订单表
type PlatformPayOrder struct {
 OrderID uint`gorm:"column:orderId;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 MerchantNo string`gorm:"column:merchantNo;type:varchar(50);not null;"`// 商户号
 MerchantID uint`gorm:"column:merchantId;type:int(11) unsigned;not null;"`// 商户ID
 MerchantOrderNo string`gorm:"column:merchantOrderNo;type:varchar(50);not null;"`// 商户订单号
 MerchantParam string`gorm:"column:merchantParam;type:varchar(500);not null;"`// 回传参数
 MerchantReqTime time.Time`gorm:"column:merchantReqTime;type:datetime;not null;"`// 商户请求时间
 PlatformOrderNo string`gorm:"column:platformOrderNo;type:varchar(21);not null;"`// 平台订单号
 OrderStatus interface{}`gorm:"column:orderStatus;type:enum('Expired','WaitPayment','Success');not null;"`// 订单状态(Expired=已过期,WaitPayment=未支付,Success=成功)
 OrderAmount float64`gorm:"column:orderAmount;type:decimal(10,2) unsigned;not null;"`// 订单金额
 RealOrderAmount float64`gorm:"column:realOrderAmount;type:decimal(10,2) unsigned;not null;"`// 真实订单金额
 PayType interface{}`gorm:"column:payType;type:enum('EBank','Quick','OfflineWechatQR','OfflineAlipayQR','OnlineWechatQR','OnlineAlipayQR','OnlineWechatH5','OnlineAlipayH5','UnionPayQR','D0Settlement','UnionPay','OnlineAlipayOriginalH5','OnlineWechatOriginalH5');not null;"`// 支付方式(EBank=网银,Quick=快捷,OfflineWechatQR=线下微信扫码,OfflineAlipayQR=线下支付宝扫码,
            OnlineWechatQR=线上微信扫码,OnlineAlipayQR=线上支付宝扫码,OnlineWechatH5=线上微信H5,OnlineAlipayH5=线上支付宝H5,
OnlineAlipayOriginalH5=线上支付宝原生H5,OnlineWechatOriginalH5=线上微信原生H5,UnionPay=银联快捷/云闪付,UnionPayQR=银联扫码,D0Settlement=D0结算)
 PayModel interface{}`gorm:"column:payModel;type:enum('Direct','NotDirect');not null;"`// 支付模式(Direct=直连,NotDirect=非直连)
 Channel string`gorm:"column:channel;type:varchar(50);not null;"`// 上游渠道
 ChannelMerchantID string`gorm:"column:channelMerchantId;type:varchar(50);not null;"`// 上游商户ID
 ChannelSetID uint`gorm:"column:channelSetId;type:int(11) unsigned;not null;"`// ID
 IdType string`gorm:"column:idType;type:varchar(50);not null;"`// 证件号码
 IdNum string`gorm:"column:idNum;type:varchar(500);not null;"`// 证件号码
 ChannelMerchantNo string`gorm:"column:channelMerchantNo;type:varchar(50);not null;"`// 上游商户号
 ChannelNoticeTime time.Time`gorm:"column:channelNoticeTime;type:datetime;"`// 支付时间(上游处理时间)
 ChannelOrderNo string`gorm:"column:channelOrderNo;type:varchar(50);"`// 渠道订单号
 PushChannelTime time.Time`gorm:"column:pushChannelTime;type:datetime;"`// 向上游推送时间
 ProcessType interface{}`gorm:"column:processType;type:enum('Expired','WaitPayment','Success','ServiceQuery','ManualOperation');not null;"`// 处理标识-暂定(Expired=已过期,WaitPayment=未支付,Success=成功)
 TradeSummary string`gorm:"column:tradeSummary;type:varchar(100);not null;"`// 交易摘要
 UserIP string`gorm:"column:userIp;type:varchar(255);not null;"`// 用户IP
 UserTerminal interface{}`gorm:"column:userTerminal;type:enum('PC','Phone','Pad');not null;"`// 用户终端
 ThirdUserID string`gorm:"column:thirdUserId;type:varchar(255);not null;"`// 商户平台里的付款人ID
 FrontNoticeURL string`gorm:"column:frontNoticeUrl;type:varchar(255);not null;"`// 前端通知地址
 BackNoticeURL string`gorm:"column:backNoticeUrl;type:varchar(255);not null;"`// 异步通知地址
 AccountDate time.Time`gorm:"column:accountDate;type:date;"`// 财务日期
 TimeoutTime time.Time`gorm:"column:timeoutTime;type:datetime;"`// 订单超时时间
 ServiceCharge float64`gorm:"column:serviceCharge;type:decimal(10,2) unsigned;not null;"`// 手续费
 ChannelServiceCharge float64`gorm:"column:channelServiceCharge;type:decimal(10,2) unsigned;not null;"`// 上游手续费
 BankCode string`gorm:"column:bankCode;type:varchar(50);not null;"`// 支付银行
 CardHolderMobile string`gorm:"column:cardHolderMobile;type:varchar(500);not null;"`// 付款人手机号码
 CardHolderName string`gorm:"column:cardHolderName;type:varchar(50);not null;"`// 付款人姓名
 CardNum string`gorm:"column:cardNum;type:varchar(500);not null;"`// 银行卡号
 CardType interface{}`gorm:"column:cardType;type:enum('','DEBIT','CREDIT');not null;"`// 银行卡类型(DEBIT=借记卡,CREDIT=信用卡)
 CallbackLimit uint`gorm:"column:callbackLimit;type:int(11) unsigned;not null;"`// 回调次数
 CallbackSuccess bool`gorm:"column:callbackSuccess;type:tinyint(1);not null;"`// 回调成功
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
 AgentFee float64`gorm:"column:agentFee;type:decimal(10,2) unsigned;not null;"`// 代理手续费
 AgentName string`gorm:"column:agentName;type:varchar(255);"`// 代理账号
}

// TableName platform_pay_order
func (PlatformPayOrder) TableName() string { 
	return "platform_pay_order" 
}

//PlatformRechargeOrder -> platform_recharge_order 
type PlatformRechargeOrder struct {
 Id int`gorm:"column:id;primary_key;auto_increment;type:int(11);not null;"`// 
 PayType interface{}`gorm:"column:payType;type:enum('EnterpriseEBank','PersonalEBank','PersonalEBankDNA','AlipayEBank','EnterpriseAlipay');not null;"`// 充值方式，EnterpriseEBank：企业网银，PersonalEBank：个人网银，EnterpriseAlipay：企业支付宝
 OrderStatus interface{}`gorm:"column:orderStatus;type:enum('Transfered','Success','Fail','Exception');not null;"`// 订单状态(Transfered=正在发起,Success=支付成功,Fail=支付失败,Exception=异常)
 PlatformOrderNo string`gorm:"column:platformOrderNo;type:varchar(50);not null;"`// 订单号
 MerchantNo string`gorm:"column:merchantNo;type:varchar(50);not null;"`// 商户号
 MerchantID uint`gorm:"column:merchantId;type:int(11) unsigned;not null;"`// 商户ID
 OrderAmount float64`gorm:"column:orderAmount;type:decimal(10,2) unsigned;not null;"`// 订单金额
 RealOrderAmount float64`gorm:"column:realOrderAmount;type:decimal(10,2) unsigned;not null;"`// 真实订单金额
 ServiceCharge float64`gorm:"column:serviceCharge;type:decimal(10,2) unsigned;not null;"`// 商户手续费
 ChannelServiceCharge float64`gorm:"column:channelServiceCharge;type:decimal(10,2) unsigned;not null;"`// 上游手续费
 ChargeAmount float64`gorm:"column:chargeAmount;type:decimal(10,2) unsigned;not null;"`// 扣掉手续费的充值金额
 Channel string`gorm:"column:channel;type:varchar(50);not null;"`// 上游渠道
 ChannelMerchantID string`gorm:"column:channelMerchantId;type:varchar(50);not null;"`// 上游商户ID
 ChannelSetID uint`gorm:"column:channelSetId;type:int(11) unsigned;not null;"`// ID
 ChannelMerchantNo string`gorm:"column:channelMerchantNo;type:varchar(50);not null;"`// 上游商户号
 RateTemp string`gorm:"column:rateTemp;type:varchar(500);not null;"`// 暂存渠道费率
 ChannelNoticeTime time.Time`gorm:"column:channelNoticeTime;type:datetime;"`// 支付时间(上游处理时间)
 OrderReason string`gorm:"column:orderReason;type:varchar(50);"`// 交易备注，原因
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
 AgentFee float64`gorm:"column:agentFee;type:decimal(10,2) unsigned;not null;"`// 代理手续费
 AgentName string`gorm:"column:agentName;type:varchar(255);"`// 代理账号
}

// TableName platform_recharge_order
func (PlatformRechargeOrder) TableName() string { 
	return "platform_recharge_order" 
}

//PlatformSettlementOrder -> platform_settlement_order 平台代付订单表
type PlatformSettlementOrder struct {
 OrderID uint`gorm:"column:orderId;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 PlatformOrderNo string`gorm:"column:platformOrderNo;type:varchar(21);not null;"`// 平台订单号
 MerchantID uint`gorm:"column:merchantId;type:int(11) unsigned;not null;"`// 商户ID
 MerchantNo string`gorm:"column:merchantNo;type:varchar(50);not null;"`// 商户号
 MerchantOrderNo string`gorm:"column:merchantOrderNo;type:varchar(50);not null;"`// 商户订单号
 MerchantParam string`gorm:"column:merchantParam;type:varchar(500);not null;"`// 回传参数
 MerchantReqTime time.Time`gorm:"column:merchantReqTime;type:datetime;not null;"`// 商户请求时间
 OrderAmount float64`gorm:"column:orderAmount;type:decimal(10,2) unsigned;not null;"`// 订单金额
 RealOrderAmount float64`gorm:"column:realOrderAmount;type:decimal(10,2) unsigned;not null;"`// 真实订单金额
 ServiceCharge float64`gorm:"column:serviceCharge;type:decimal(10,2) unsigned;not null;"`// 商户手续费
 ChannelServiceCharge float64`gorm:"column:channelServiceCharge;type:decimal(10,2) unsigned;not null;"`// 上游手续费
 ChannelSetID uint`gorm:"column:channelSetId;type:int(11) unsigned;not null;"`// ID
 FailReason string`gorm:"column:failReason;type:varchar(255);not null;"`// 失败原因
 Channel string`gorm:"column:channel;type:varchar(50);not null;"`// 上游渠道
 ChannelMerchantID uint`gorm:"column:channelMerchantId;type:int(11) unsigned;not null;"`// 上游渠道商户号
 ChannelMerchantNo string`gorm:"column:channelMerchantNo;type:varchar(50);not null;"`// 上游渠道商户号
 ChannelOrderNo string`gorm:"column:channelOrderNo;type:varchar(50);not null;"`// 上游订单号
 ChannelNoticeTime time.Time`gorm:"column:channelNoticeTime;type:datetime;"`// 上游通知时间(处理时间)
 OrderReason string`gorm:"column:orderReason;type:varchar(255);not null;"`// 用途
 OrderStatus interface{}`gorm:"column:orderStatus;type:enum('Transfered','Success','Fail','Exception');not null;"`// 订单状态(Transfered=已划款,Success=划款成功,Fail=划款失败,Exception=异常)
 OrderType interface{}`gorm:"column:orderType;type:enum('SettlementOrder');not null;"`// 支付类型
 PushChannelTime time.Time`gorm:"column:pushChannelTime;type:datetime;"`// 向上游推送时间
 BackNoticeURL string`gorm:"column:backNoticeUrl;type:varchar(255);not null;"`// 异步通知地址
 BankLineNo string`gorm:"column:bankLineNo;type:varchar(50);not null;"`// 银行编号
 BankCode string`gorm:"column:bankCode;type:varchar(50);not null;"`// 收款银行
 BankName string`gorm:"column:bankName;type:varchar(50);not null;"`// 开户行
 BankAccountName string`gorm:"column:bankAccountName;type:varchar(50);not null;"`// 收款人姓名
 BankAccountNo string`gorm:"column:bankAccountNo;type:varchar(500);not null;"`// 收款卡号
 City string`gorm:"column:city;type:varchar(50);not null;"`// 开户行所属市
 Province string`gorm:"column:province;type:varchar(50);not null;"`// 开户行所属省
 UserIP string`gorm:"column:userIp;type:varchar(255);not null;"`// 用户IP
 ApplyPerson string`gorm:"column:applyPerson;type:varchar(50);not null;"`// 申请人
 ApplyIP string`gorm:"column:applyIp;type:varchar(50);not null;"`// 申请人IP
 AccountDate time.Time`gorm:"column:accountDate;type:date;"`// 财务日期
 AuditPerson string`gorm:"column:auditPerson;type:varchar(50);not null;"`// 审核人
 AuditIP string`gorm:"column:auditIp;type:varchar(50);not null;"`// 审核人IP
 AuditTime time.Time`gorm:"column:auditTime;type:datetime;"`// 审核时间
 TradeSummary string`gorm:"column:tradeSummary;type:varchar(255);not null;"`// 交易摘要
 ProcessType interface{}`gorm:"column:processType;type:enum('Expired','WaitPayment','Success','ServiceQuery','ManualOperation');not null;"`// 处理标识-暂定(Expired=已过期,WaitPayment=未支付,Success=成功)
 CallbackLimit uint`gorm:"column:callbackLimit;type:int(11) unsigned;not null;"`// 回调次数
 CallbackSuccess bool`gorm:"column:callbackSuccess;type:tinyint(1);not null;"`// 回调成功
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
 AgentFee float64`gorm:"column:agentFee;type:decimal(10,2) unsigned;not null;"`// 代理手续费
 AgentName string`gorm:"column:agentName;type:varchar(255);"`// 代理账号
}

// TableName platform_settlement_order
func (PlatformSettlementOrder) TableName() string { 
	return "platform_settlement_order" 
}

//PlatformTransformOrder -> platform_transform_order 商户转换订单表
type PlatformTransformOrder struct {
 OrderID uint`gorm:"column:orderId;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 FromMerchantID uint`gorm:"column:fromMerchantId;type:int(11) unsigned;not null;"`// 来源商户ID
 FromMerchantNo string`gorm:"column:fromMerchantNo;type:varchar(50);not null;"`// 来源商户号
 ToMerchantID uint`gorm:"column:toMerchantId;type:int(11) unsigned;not null;"`// 目标商户ID
 ToMerchantNo string`gorm:"column:toMerchantNo;type:varchar(50);not null;"`// 目标商户号
 PlatformOrderNo string`gorm:"column:platformOrderNo;type:varchar(50);not null;"`// 平台订单号
 OrderAmount float64`gorm:"column:orderAmount;type:decimal(10,2) unsigned;not null;"`// 转账金额(元)
 ServiceCharge float64`gorm:"column:serviceCharge;type:decimal(10,2) unsigned;not null;"`// 商户手续费
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
}

// TableName platform_transform_order
func (PlatformTransformOrder) TableName() string { 
	return "platform_transform_order" 
}

//SettlementActiveQueryTask -> settlement_active_query_task 结算查询任务
type SettlementActiveQueryTask struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 Status interface{}`gorm:"column:status;type:enum('Success','Fail','Execute');not null;"`// 
 RetryCount uint`gorm:"column:retryCount;type:int(11) unsigned;not null;"`// 
 FailReason string`gorm:"column:failReason;type:varchar(255);not null;"`// 
 PlatformOrderNo string`gorm:"column:platformOrderNo;type:varchar(21);not null;"`// 平台订单号
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
}

// TableName settlement_active_query_task
func (SettlementActiveQueryTask) TableName() string { 
	return "settlement_active_query_task" 
}

//SettlementFetchTask -> settlement_fetch_task 结算轮循任务
type SettlementFetchTask struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 Status interface{}`gorm:"column:status;type:enum('Success','Fail','Execute','WaitTransfer');not null;"`// 
 RetryCount uint`gorm:"column:retryCount;type:int(11) unsigned;not null;"`// 
 FailReason string`gorm:"column:failReason;type:varchar(255);not null;"`// 
 PlatformOrderNo string`gorm:"column:platformOrderNo;type:varchar(21);not null;"`// 平台订单号
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
}

// TableName settlement_fetch_task
func (SettlementFetchTask) TableName() string { 
	return "settlement_fetch_task" 
}

//SettlementNotifyTask -> settlement_notify_task 结算通知任务
type SettlementNotifyTask struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 Status interface{}`gorm:"column:status;type:enum('Success','Fail','Execute');not null;"`// 
 RetryCount uint`gorm:"column:retryCount;type:int(11) unsigned;not null;"`// 
 FailReason string`gorm:"column:failReason;type:varchar(255);not null;"`// 
 PlatformOrderNo string`gorm:"column:platformOrderNo;type:varchar(21);not null;"`// 平台订单号
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
}

// TableName settlement_notify_task
func (SettlementNotifyTask) TableName() string { 
	return "settlement_notify_task" 
}

//SettlementPushTask -> settlement_push_task 结算回调任务
type SettlementPushTask struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 ThirdParams string`gorm:"column:thirdParams;type:varchar(2000);not null;"`// 
 StandardParams string`gorm:"column:standardParams;type:varchar(2000);not null;"`// 
 Status interface{}`gorm:"column:status;type:enum('Success','Fail','Execute');not null;"`// 
 RetryCount uint`gorm:"column:retryCount;type:int(11) unsigned;not null;"`// 
 FailReason string`gorm:"column:failReason;type:varchar(255);not null;"`// 
 PlatformOrderNo string`gorm:"column:platformOrderNo;type:varchar(21);not null;"`// 平台订单号
 IpDesc string`gorm:"column:ipDesc;type:varchar(50);not null;"`// ip
 Ip string`gorm:"column:ip;type:varchar(50);not null;"`// ip
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
}

// TableName settlement_push_task
func (SettlementPushTask) TableName() string { 
	return "settlement_push_task" 
}

//SettlementRechargeOrder -> settlement_recharge_order 
type SettlementRechargeOrder struct {
 Id int`gorm:"column:id;primary_key;auto_increment;type:int(11);not null;"`// 
 Type interface{}`gorm:"column:type;type:enum('outsideRecharge','insideRecharge');"`// 充值方式，insideRecharge：内部，outsideRecharge：外部
 OrderStatus interface{}`gorm:"column:orderStatus;type:enum('Transfered','Success','Fail','Exception');not null;"`// 订单状态(Transfered=正在发起,Success=支付成功,Fail=支付失败,Exception=异常)
 SettlementRechargeOrderNo string`gorm:"column:settlementRechargeOrderNo;type:varchar(50);not null;"`// 订单号
 MerchantNo string`gorm:"column:merchantNo;type:varchar(50);not null;"`// 商户号
 MerchantID uint`gorm:"column:merchantId;type:int(11) unsigned;not null;"`// 商户ID
 OrderAmount float64`gorm:"column:orderAmount;type:decimal(10,2) unsigned;not null;"`// 订单金额
 RealOrderAmount float64`gorm:"column:realOrderAmount;type:decimal(10,2) unsigned;not null;"`// 真实订单金额
 ServiceCharge float64`gorm:"column:serviceCharge;type:decimal(10,2) unsigned;not null;"`// 商户手续费
 ChannelServiceCharge float64`gorm:"column:channelServiceCharge;type:decimal(10,2) unsigned;not null;"`// 上游手续费
 ChargeAmount float64`gorm:"column:chargeAmount;type:decimal(10,2) unsigned;not null;"`// 扣掉手续费的充值金额
 Channel string`gorm:"column:channel;type:varchar(50);not null;"`// 上游渠道
 ChannelMerchantID string`gorm:"column:channelMerchantId;type:varchar(50);not null;"`// 上游商户ID
 ChannelSetID uint`gorm:"column:channelSetId;type:int(11) unsigned;not null;"`// ID
 ChannelMerchantNo string`gorm:"column:channelMerchantNo;type:varchar(50);not null;"`// 上游商户号
 ChannelNoticeTime time.Time`gorm:"column:channelNoticeTime;type:datetime;"`// 支付时间(上游处理时间)
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
 AgentFee float64`gorm:"column:agentFee;type:decimal(10,2) unsigned;not null;"`// 代理手续费
}

// TableName settlement_recharge_order
func (SettlementRechargeOrder) TableName() string { 
	return "settlement_recharge_order" 
}

//SystemAccount -> system_account 管理账号表
type SystemAccount struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 UserName string`gorm:"column:userName;type:varchar(255);not null;"`// 用户名称
 LoginName string`gorm:"column:loginName;type:varchar(255);not null;"`// 登录账号
 LoginPwd string`gorm:"column:loginPwd;type:varchar(255);not null;"`// 密码
 LoginFailNum uint`gorm:"column:loginFailNum;type:int(50) unsigned;not null;"`// 登录失败次数
 LoginPwdAlterTime time.Time`gorm:"column:loginPwdAlterTime;type:datetime;"`// 密码修改时间
 Status interface{}`gorm:"column:status;type:enum('Normal','Close');not null;"`// 状态
 GoogleAuthSecretKey string`gorm:"column:googleAuthSecretKey;type:varchar(500);not null;"`// 谷歌auth密钥
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 UpdatedAt time.Time`gorm:"column:updated_at;type:datetime;not null;"`// 
 Role uint`gorm:"column:role;type:int(50) unsigned;not null;"`// 角色（1，客服，2财务，3运维，4主管）
 CheckPwd string`gorm:"column:check_pwd;type:varchar(50);not null;"`// 审核密码
}

// TableName system_account
func (SystemAccount) TableName() string { 
	return "system_account" 
}

//SystemAccountActionLog -> system_account_action_log 管理账号操作日志
type SystemAccountActionLog struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 Action interface{}`gorm:"column:action;type:enum('UPDATE_PASSWORD','UPDATE_LOGINNAME','UPDATE_CHANNEL_MERCHANT','CREATE_CHANNEL_MERCHANT','IMPORT_CHANNEL_MERCHANT_RATE','CREATE_MERCHANT','UPDATE_MERCHANT','CREATE_MERCHANT_ACCOUNT','UPDATE_MERCHANT_ACCOUNT','UPDATE_MERCHANT_ACCOUNT_PASSWORD','UPDATE_MERCHANT_ACCOUNT_PAY_PASSWORD','UPDATE_MERCHANT_SIGNKEY','IMPORT_MERCHANT_RATE','IMPORT_MERCHANT_CHANNEL_PAY','IMPORT_MERCHANT_CHANNEL_SETTLEMENT','CREATE_BALANCE_ADJUSTMENT','UPDATE_BALANCE_ADJUSTMENT','MANUAL_PLATFORMPAYORDER','MANUAL_PLATFORMSETTLEMENTORDER','BIND_GOOGLE_AUTH','IMPORT_CHANNEL_PAY_CONFIG','IMPORT_CHANNEL_SETTLEMENT_CONFIG');not null;"`// 行为
 ActionBeforeData interface{}`gorm:"column:actionBeforeData;type:mediumtext;"`// 操作前数据
 ActionAfterData interface{}`gorm:"column:actionAfterData;type:mediumtext;"`// 操作后数据
 Status interface{}`gorm:"column:status;type:enum('Success','Fail');not null;"`// 状态
 AccountID uint`gorm:"column:accountId;type:int(11) unsigned;not null;"`// accountId
 IpDesc string`gorm:"column:ipDesc;type:varchar(50);not null;"`// ip
 Ip string`gorm:"column:ip;type:varchar(50);not null;"`// ip
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
}

// TableName system_account_action_log
func (SystemAccountActionLog) TableName() string { 
	return "system_account_action_log" 
}

//SystemAccountLoginLog -> system_account_login_log 管理账号登录日志
type SystemAccountLoginLog struct {
 Id uint`gorm:"column:id;primary_key;auto_increment;type:int(11) unsigned;not null;"`// 
 Ip string`gorm:"column:ip;type:varchar(50);not null;"`// ip
 IpDesc string`gorm:"column:ipDesc;type:varchar(50);not null;"`// ip
 Status interface{}`gorm:"column:status;type:enum('Success','Fail');not null;"`// 状态
 CreatedAt time.Time`gorm:"column:created_at;type:datetime;not null;"`// 
 AccountID uint`gorm:"column:accountId;type:int(11) unsigned;not null;"`// accountId
 Remark interface{}`gorm:"column:remark;type:enum('PASSWORD_ERROR','LOGIN_FAIL_COUNT','');not null;"`// remark(PASSWORD_ERROR=密码错误,LOGIN_FAIL_COUNT=密码登录错误次数过多)
}

// TableName system_account_login_log
func (SystemAccountLoginLog) TableName() string { 
	return "system_account_login_log" 
}
